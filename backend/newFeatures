import React from 'react';
import SavetoLocalStorage from './pages/SavetoLocalStorage';
import SavetoDB from './pages/SavetoDB';
import UserList from './pages/UserList';

const App = () => {
    return (
        <div>
            <SavetoDB />
            <UserList />
            {/* <SavetoLocalStorage /> */}
        </div>
    );
};

export default App;



// SavetoDB.js
import React, { useState } from 'react';
import axios from 'axios';

const SavetoDB = () => {
    const [user, setUser] = useState({ name: '', email: '', phone: '', profession: '' });

    const handleChange = (e) => {
        setUser({ ...user, [e.target.name]: e.target.value });
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        try {
            const res = await axios.post('http://localhost:8000/api/v1/users', user);
            alert('Saved to DB!');
            setUser({ name: '', email: '', phone: '', profession: '' }); // Reset form
        } catch (err) {
            console.error('Error saving to DB:', err);
            alert('Error saving to DB');
        }
    };

    return (
        <div style={{ padding: '20px' }}>
            <h2>Add User</h2>
            <form onSubmit={handleSubmit}>
                <input type="text" name="name" placeholder="Name" value={user.name} onChange={handleChange} required />
                <input type="email" name="email" placeholder="Email" value={user.email} onChange={handleChange} required />
                <input type="text" name="phone" placeholder="Phone" value={user.phone} onChange={handleChange} required />
                <input type="text" name="profession" placeholder="Profession" value={user.profession} onChange={handleChange} required />
                <br />
                <button type="submit">Save to MongoDB</button>
            </form>
        </div>
    );
};

export default SavetoDB;



savet to localstorage
// export default UserForm;
import React, { useState, useEffect } from 'react';
import axios from 'axios';

const SavetoLocalStorage = () => {
    const [user, setUser] = useState({ name: '', email: '', phone: '', profession: '' });
    const [users, setUsers] = useState([]);

    // Load users from localStorage on page load
    useEffect(() => {
        const storedUsers = JSON.parse(localStorage.getItem('users')) || [];
        setUsers(storedUsers);
    }, []);

    const handleChange = (e) => {
        setUser({ ...user, [e.target.name]: e.target.value });
    };


    const handleSubmit = (e) => {
        e.preventDefault();
        const updatedUsers = [...users, user];
        setUsers(updatedUsers);
        localStorage.setItem('users', JSON.stringify(updatedUsers));
        setUser({ name: '', email: '', phone: '', profession: '' }); // Reset form
    };

    // Save to database via API
    const handleSaveToDB = async () => {
        try {
            const response = await axios.post('http://localhost:8000/api/v1/users', user);
            alert('Saved to DB!');
        } catch (err) {
            console.error('Error saving to DB:', err);
        }
    };


    // ðŸ§¹ Function to clear all saved users
    const handleDeleteAll = () => {
        localStorage.removeItem('users');
        setUsers([]);
    };



    return (
        <div style={{ padding: '20px' }}>
            <h2>Add User</h2>
            <form onSubmit={handleSubmit}>
                <input type="text" name="name" placeholder="Name" value={user.name} onChange={handleChange} required />
                <input type="email" name="email" placeholder="Email" value={user.email} onChange={handleChange} required />
                <input type="text" name="phone" placeholder="Phone" value={user.phone} onChange={handleChange} required />
                <input type="text" name="profession" placeholder="Profession" value={user.profession} onChange={handleChange} required />
                <button type="submit">Save to LocalStorage</button>
                <button onClick={handleSaveToDB}>Save to DB</button>
            </form>

            <h3>Saved Users</h3>
            {users.length === 0 ? (
                <p>No users saved.</p>
            ) : (
                <>
                    <table border="1" cellPadding="10" cellSpacing="0">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Phone</th>
                                <th>Profession</th>
                            </tr>
                        </thead>
                        <tbody>
                            {users.map((u, i) => (
                                <tr key={i}>
                                    <td>{u.name}</td>
                                    <td>{u.email}</td>
                                    <td>{u.phone}</td>
                                    <td>{u.profession}</td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                    <br />
                    <button onClick={handleDeleteAll} style={{ backgroundColor: 'red', color: 'white' }}>
                        Delete All Users
                    </button>
                </>
            )}
        </div>
    );
};

export default SavetoLocalStorage;



//User Lit
import React, { useEffect, useState } from 'react';
import axios from 'axios';

const UserList = () => {
    const [users, setUsers] = useState([]);
    const [loading, setLoading] = useState(true);

    const fetchUsers = async () => {
        try {
            const res = await axios.get('http://localhost:8000/api/v1/users');
            setUsers(res.data);
        } catch (error) {
            console.error('Error fetching users:', error);
        } finally {
            setLoading(false);
        }
    };

    useEffect(() => {
        fetchUsers();
    }, []);

    if (loading) return <p>Loading...</p>;

    return (
        <div style={{ padding: '20px' }}>
            <h2>Users from MongoDB</h2>
            {users.length === 0 ? (
                <p>No users found.</p>
            ) : (
                <table border="1" cellPadding="10" cellSpacing="0" style={{ width: '100%', borderCollapse: 'collapse' }}>
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Profession</th>
                        </tr>
                    </thead>
                    <tbody>
                        {users.map((user) => (
                            <tr key={user._id}>
                                <td>{user.name}</td>
                                <td>{user.email}</td>
                                <td>{user.phone}</td>
                                <td>{user.profession}</td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            )}
        </div>
    );
};

export default UserList;
